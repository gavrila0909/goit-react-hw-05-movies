{"version":3,"file":"static/js/626.4294c586.chunk.js","mappings":"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","sources":["Helpers/API.jsx","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","webpack://react-homework-template/./src/components/SearchMoviesList/SearchMoviesList.module.css?41bb","components/SearchMoviesList/SearchMoviesList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab57a424e6032b04c57d16cb953b0f53';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n// Ways to handle API fetch requests\n\nexport async function getMovies() {\n  const fetchMoviesURL = `${URL}/trending/all/day?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await fetch(fetchMoviesURL);\n    const data = await response.json();\n    //console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const fetchMoviesURL = `${URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    if (response.status !== 200) {\n      throw new Error('Error fetching credits movies!');\n    }\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getMovieCredits = async movieId => {\n  const fetchMoviesURL = `${URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  const fetchMoviesURL = `${URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  const fetchMoviesURL = `${URL}/search/movie?language=en-US&query=${query}&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searcbarForm\":\"Searchbar_searcbarForm__ODlrq\"};","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit, resetQuery }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') ?? '');\n\n  useEffect(() => {\n    setInputValue('');\n  }, [resetQuery]);\n\n  const handleInputChange = event => {\n    const query = event.target.value;\n    setInputValue(query);\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(inputValue);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.searcbarForm}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"inputValue\"\n          value={inputValue}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  resetQuery: PropTypes.bool.isRequired,\n};\n\nexport default Searchbar;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesListContainer\":\"SearchMoviesList_moviesListContainer__CfZhi\",\"moviesList\":\"SearchMoviesList_moviesList__1XiBb\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { IMAGE_URL } from '../../Helpers/API';\nimport styles from './SearchMoviesList.module.css';\n\nconst SearchMoviesList = ({ movies }) => {\n  const location = useLocation();\n  //console.log(movies);\n  return (\n    <>\n      <div className={styles.moviesListContainer}>\n        {movies.map(movie => (\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            key={movie.id}\n            className={styles.moviesList}\n          >\n            <div>\n              <img src={IMAGE_URL + movie.backdrop_path} alt={movie.title} />\n            </div>\n            <div>\n              <h3>{movie.title}</h3>\n              <p>Release data: {movie.release_date}</p>\n              <p>User score: {movie.vote_average.toFixed(1)} %</p>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </>\n  );\n};\n\nSearchMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      backdrop_path: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default SearchMoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"back\":\"Movies_back__IHWPl\"};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { BackLink } from '../../Helpers/Link.styled';\nimport { getSearchMovies } from 'Helpers/API';\nimport Loader from '../../components/Loader/Loader';\nimport Searchbar from '../../components/Searchbar/Searchbar';\nimport SearchMoviesList from '../../components/SearchMoviesList/SearchMoviesList';\nimport Notiflix from 'notiflix';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [resetQuery, setResetQuery] = useState(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function searchMovies() {\n      if (query === '') {\n        setIsLoading(false);\n        return;\n      }\n\n      setIsLoading(true);\n      try {\n        const response = await getSearchMovies(query);\n        if (response.results.length === 0) {\n          Notiflix.Notify.failure('No movies found with the given title!');\n        }\n        setMovies(response.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n        Notiflix.Notify.failure('An error occurred while searching for movies!');\n      } finally {\n        setIsLoading(false);\n        setResetQuery(true); // Reset the input after the search\n      }\n    }\n    searchMovies();\n  }, [query]);\n\n  const handleSubmit = newQuery => {\n    setMovies([]);\n    setQuery(newQuery);\n    setResetQuery(false); // Reset the reset state\n  };\n\n  return (\n    <>\n      <div className={styles.back}>\n        <BackLink to={backLinkHref}>❮ Go Back</BackLink>\n        <Searchbar onSubmit={handleSubmit} resetQuery={resetQuery} />\n      </div>\n\n      {isLoading ? <Loader /> : <SearchMoviesList movies={movies} />}\n    </>\n  );\n};\n\nMovies.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default Movies;\n"],"names":["URL","API_KEY","IMAGE_URL","getMovies","_getMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee4","fetchMoviesURL","response","data","_context4","prev","next","concat","fetch","sent","json","abrupt","t0","console","log","stop","getMovieDetails","_x","_getMovieDetails","_callee5","movieId","_context5","axios","status","Error","getMovieCredits","_ref","_callee","_context","_x2","getMovieReviews","_ref2","_callee2","_context2","_x3","getSearchMovies","_ref3","_callee3","query","_context3","_x4","_searchParams$get","onSubmit","resetQuery","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","get","_useState2","inputValue","setInputValue","useEffect","_jsx","_Fragment","children","_jsxs","event","preventDefault","className","styles","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","movies","location","useLocation","map","movie","Link","to","id","state","from","src","backdrop_path","alt","title","release_date","vote_average","toFixed","_location$state$from","_location$state","setMovies","_useState3","_useState4","setQuery","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","setResetQuery","backLinkHref","_searchMovies","results","length","Notiflix","error","finish","searchMovies","BackLink","Searchbar","newQuery","Loader","SearchMoviesList"],"sourceRoot":""}