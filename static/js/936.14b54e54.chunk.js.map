{"version":3,"file":"static/js/936.14b54e54.chunk.js","mappings":"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","sources":["Helpers/API.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab57a424e6032b04c57d16cb953b0f53';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n// Ways to handle API fetch requests\n\nexport async function getMovies() {\n  const fetchMoviesURL = `${URL}/trending/all/day?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await fetch(fetchMoviesURL);\n    const data = await response.json();\n    //console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const fetchMoviesURL = `${URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    if (response.status !== 200) {\n      throw new Error('Error fetching credits movies!');\n    }\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getMovieCredits = async movieId => {\n  const fetchMoviesURL = `${URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  const fetchMoviesURL = `${URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  const fetchMoviesURL = `${URL}/search/movie?language=en-US&query=${query}&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"trendingContainer\":\"Home_trendingContainer__7iFS9\"};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getMovies, IMAGE_URL } from '../../Helpers/API';\nimport Loader from '../../components/Loader/Loader';\nimport styles from './Home.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      setIsLoading(true);\n      try {\n        const response = await getMovies();\n        //console.log(response.results);\n        setMovies(response.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return (\n    <div className={styles.trendingContainer}>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <h1>Trending movies today</h1>\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>\n                  <img\n                    src={IMAGE_URL + movie.backdrop_path}\n                    alt={movie.title}\n                  />\n                  <p>{movie.title}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      backdrop_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Home;\n"],"names":["URL","API_KEY","IMAGE_URL","getMovies","_getMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee4","fetchMoviesURL","response","data","_context4","prev","next","concat","fetch","sent","json","abrupt","t0","console","log","stop","getMovieDetails","_x","_getMovieDetails","_callee5","movieId","_context5","axios","status","Error","getMovieCredits","_ref","_callee","_context","_x2","getMovieReviews","_ref2","_callee2","_context2","_x3","getSearchMovies","_ref3","_callee3","query","_context3","_x4","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","useEffect","_fetchMovies","results","error","finish","fetchMovies","_jsx","className","styles","children","Loader","_jsxs","_Fragment","map","movie","Link","to","id","src","backdrop_path","alt","title"],"sourceRoot":""}