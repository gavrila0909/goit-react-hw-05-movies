{"version":3,"file":"static/js/626.3146dc42.chunk.js","mappings":"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","sources":["Helpers/API.jsx","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","webpack://react-homework-template/./src/components/SearchMoviesList/SearchMoviesList.module.css?41bb","components/SearchMoviesList/SearchMoviesList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab57a424e6032b04c57d16cb953b0f53';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n// Ways to handle API fetch requests\n\nexport async function getMovies() {\n  const fetchMoviesURL = `${URL}/trending/all/day?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await fetch(fetchMoviesURL);\n    const data = await response.json();\n    //console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const fetchMoviesURL = `${URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    if (response.status !== 200) {\n      throw new Error('Error fetching credits movies!');\n    }\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getMovieCredits = async movieId => {\n  const fetchMoviesURL = `${URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  const fetchMoviesURL = `${URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  const fetchMoviesURL = `${URL}/search/movie?language=en-US&query=${query}&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searcbarForm\":\"Searchbar_searcbarForm__ODlrq\"};","import { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  //actualizam noua valoare input\n  const handleInputChange = event => {\n    const query = event.target.value;\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.searcbarForm}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"inputValue\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <button>Search</button>\n      </form>\n    </>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesListContainer\":\"SearchMoviesList_moviesListContainer__CfZhi\",\"moviesList\":\"SearchMoviesList_moviesList__1XiBb\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { IMAGE_URL } from '../../Helpers/API';\nimport styles from './SearchMoviesList.module.css';\n\nconst SearchMoviesList = ({ movies }) => {\n  //console.log(movies);\n  return (\n    <>\n      <div className={styles.moviesListContainer}>\n        {movies.map(movie => (\n          <Link\n            to={`/movies/${movie.id}`}\n            key={movie.id}\n            className={styles.moviesList}\n          >\n            <div>\n              <img src={IMAGE_URL + movie.backdrop_path} alt={movie.title} />\n            </div>\n            <div>\n              <h3>{movie.title}</h3>\n              <p>Release data: {movie.release_date}</p>\n              <p>User score: {movie.vote_average.toFixed(1)} %</p>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </>\n  );\n};\n\nSearchMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      backdrop_path: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default SearchMoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"back\":\"Movies_back__IHWPl\"};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { BackLink } from '../../Helpers/Link.styled';\nimport { getSearchMovies } from 'Helpers/API';\nimport Loader from '../../components/Loader/Loader';\nimport Searchbar from '../../components/Searchbar/Searchbar';\nimport SearchMoviesList from '../../components/SearchMoviesList/SearchMoviesList';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function searchMovies() {\n      setIsLoading(true);\n      try {\n        const response = await getSearchMovies(query);\n        //console.log(response.results);\n        setMovies(response.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    searchMovies();\n  }, [query]);\n\n  const handleSubmit = newQuery => {\n    setMovies([]);\n    setQuery(newQuery);\n  };\n\n  return (\n    <>\n      <div className={styles.back}>\n        <BackLink to={backLinkHref}> ❮ Go Back</BackLink>\n        <Searchbar onSubmit={handleSubmit} />\n      </div>\n\n      {isLoading ? <Loader /> : <SearchMoviesList movies={movies} />}\n    </>\n  );\n};\n\nMovies.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default Movies;\n"],"names":["URL","API_KEY","IMAGE_URL","getMovies","_getMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee4","fetchMoviesURL","response","data","_context4","prev","next","concat","fetch","sent","json","abrupt","t0","console","log","stop","getMovieDetails","_x","_getMovieDetails","_callee5","movieId","_context5","axios","status","Error","getMovieCredits","_ref","_callee","_context","_x2","getMovieReviews","_ref2","_callee2","_context2","_x3","getSearchMovies","_ref3","_callee3","query","_context3","_x4","_searchParams$get","onSubmit","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","get","_jsx","_Fragment","children","_jsxs","event","preventDefault","className","styles","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","movies","map","movie","Link","to","id","src","backdrop_path","alt","title","release_date","vote_average","toFixed","_location$state$from","_location$state","_useState","useState","_useState2","setMovies","_useState3","_useState4","setQuery","_useState5","_useState6","isLoading","setIsLoading","backLinkHref","useLocation","state","from","useEffect","_searchMovies","results","error","finish","searchMovies","BackLink","Searchbar","newQuery","Loader","SearchMoviesList"],"sourceRoot":""}