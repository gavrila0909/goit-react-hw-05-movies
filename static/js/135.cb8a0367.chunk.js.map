{"version":3,"file":"static/js/135.cb8a0367.chunk.js","mappings":"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","sources":["Helpers/API.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab57a424e6032b04c57d16cb953b0f53';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n// Ways to handle API fetch requests\n\nexport async function getMovies() {\n  const fetchMoviesURL = `${URL}/trending/all/day?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await fetch(fetchMoviesURL);\n    const data = await response.json();\n    //console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const fetchMoviesURL = `${URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    if (response.status !== 200) {\n      throw new Error('Error fetching credits movies!');\n    }\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getMovieCredits = async movieId => {\n  const fetchMoviesURL = `${URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  const fetchMoviesURL = `${URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  const fetchMoviesURL = `${URL}/search/movie?language=en-US&query=${query}&api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(fetchMoviesURL);\n    //console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"MovieDetails_movieDetailsContainer__hxmcN\",\"movieInfo\":\"MovieDetails_movieInfo__4EKMk\",\"movieExtraInfo\":\"MovieDetails_movieExtraInfo__GPfq8\",\"castReviewDiv\":\"MovieDetails_castReviewDiv__2rU5c\"};","import React, { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Outlet, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { BackLink } from '../../Helpers/Link.styled';\nimport { getMovieDetails, IMAGE_URL } from 'Helpers/API';\nimport Loader from 'components/Loader/Loader';\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      setIsLoading(true);\n      try {\n        const response = await getMovieDetails(movieId);\n        setMovieDetails(response);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={backLinkHref}> ‚ùÆ Go Back</BackLink>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className={styles.movieDetailsContainer}>\n          <div className={styles.movieInfo}>\n            <img\n              src={IMAGE_URL + movieDetails.backdrop_path}\n              alt={movieDetails.title || movieDetails.name}\n            />\n            <div>\n              <h1>{movieDetails.title || movieDetails.name}</h1>\n              <p>User score: {movieDetails.vote_average.toFixed(1)} %</p>\n              <h4>Overview</h4>\n              <p>{movieDetails.overview}</p>\n              <p>\n                <b>Genre:</b>{' '}\n                {movieDetails.genres.map(genre => genre.name).join(' ')}\n              </p>\n            </div>\n          </div>\n          <div className={styles.movieExtraInfo}>\n            <h3>Additional information</h3>\n            <div className={styles.castReviewDiv}>\n              <ul>\n                <li>\n                  <Link to=\"cast\">Cast</Link>\n                </li>\n                <li>\n                  <Link to=\"reviews\">Reviews</Link>\n                </li>\n              </ul>\n            </div>\n            <Suspense fallback={<div>Loading subpage...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      backdrop_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      vote_average: PropTypes.string.isRequired,\n      genres: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieDetails;\n"],"names":["URL","API_KEY","IMAGE_URL","getMovies","_getMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee4","fetchMoviesURL","response","data","_context4","prev","next","concat","fetch","sent","json","abrupt","t0","console","log","stop","getMovieDetails","_x","_getMovieDetails","_callee5","movieId","_context5","axios","status","Error","getMovieCredits","_ref","_callee","_context","_x2","getMovieReviews","_ref2","_callee2","_context2","_x3","getSearchMovies","_ref3","_callee3","query","_context3","_x4","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","backLinkHref","useLocation","state","from","useEffect","_fetchMovieDetails","error","finish","fetchMovieDetails","_jsxs","_Fragment","children","_jsx","BackLink","to","Loader","className","styles","src","backdrop_path","alt","title","name","vote_average","toFixed","overview","genres","map","genre","join","Link","Suspense","fallback","Outlet"],"sourceRoot":""}